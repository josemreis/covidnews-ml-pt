There were 43 warnings (use warnings() to see them)
Loading required package: tidyverse
── Attaching packages ─────────────────────────────────────── tidyverse 1.3.0 ──
✔ ggplot2 3.3.0     ✔ purrr   0.3.3
✔ tibble  2.1.3     ✔ dplyr   0.8.5
✔ tidyr   1.0.2     ✔ stringr 1.4.0
✔ readr   1.3.1     ✔ forcats 0.5.0
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
[1] ""

Attaching package: ‘git2r’

The following object is masked from ‘package:dplyr’:

    pull

The following objects are masked from ‘package:purrr’:

    is_empty, when

Loading required package: lattice

Attaching package: ‘caret’

The following object is masked from ‘package:purrr’:

    lift

Parsing: https://api.gdeltproject.org/api/v2/doc/doc?query=%20sourcecountry:po&sourcelang:por&mode=artlist&format=json&timespan=30&maxrecords=250&sort=datedesc

>> GDELT query --> done.
Warning messages:
1: Trying to compute distinct() for variables not found in the data:
- `urlArticle`
This is an error, but only a warning is raised for compatibility reasons.
The operation will return the input unchanged. 
2: In if (class(gdelt_pt_all) == "try-error") { :
  the condition has length > 1 and only the first element will be used
Warning messages:
1: Unknown or uninitialised column: 'urlArticle'. 
2: Unknown or uninitialised column: 'titleArticle'. 
Error: Can't subset columns that don't exist.
✖ The column `title` doesn't exist.
Backtrace:
     █
  1. ├─`%>%`(...)
  2. │ ├─base::withVisible(eval(quote(`_fseq`(`_lhs`)), env, env))
  3. │ └─base::eval(quote(`_fseq`(`_lhs`)), env, env)
  4. │   └─base::eval(quote(`_fseq`(`_lhs`)), env, env)
  5. │     └─`_fseq`(`_lhs`)
  6. │       └─magrittr::freduce(value, `_function_list`)
  7. │         └─function_list[[i]](value)
  8. │           ├─tidyr::unite(...)
  9. │           └─tidyr:::unite.data.frame(...)
 10. │             └─tidyselect::vars_select(tbl_vars(data), ...)
 11. │               └─tidyselect:::eval_select_impl(...)
 12. │                 ├─tidyselect:::with_subscript_errors(...)
 13. │                 │ ├─base::tryCatch(...)
 14. │                 │ │ └─base:::tryCatchList(expr, classes, parentenv, handlers)
 15. │                 │ │   └─base:::tryCatchOne(expr, names, pa
Execution halted
